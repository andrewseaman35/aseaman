{% extends 'base.jinja2' %}

{% block page_id %}project-car{% endblock %}
{% block body_class %}project-car{% endblock %}

{% block content %}
<div class="inner">
    <div>
        <div class="project-header">
            <h1>Salt Level Tracking</h1>
            <h2>System Archtecture</h2>
        </div>

        {{ macros.captioned_image("salt_level/architecture.png", "System Architecture", None, "large") }}

        <p>
            The system can be segmented into three subsystems: data input, passive data output,
            and active data output. Each of these chunks revolves around the data, which
            in this case is stored in DynamoDB.
        </p>
        <p>
            The data input subsystem consists of the distance sensors which collect the data,
            AWS IoT which is used as a secure interface from the sensors to the rest of the
            system, and DynamoDB, which persists the data.
        </p>
        <p>
            The passive data output subsystem includes the segments of the system which require
            user action to trigger the system. A user accesses my
            {{ macros.link_to("salt_level/index.html", "Salt Level") }} page. This page makes a
            request to an API set up with API Gateway which is backed by a Lambda function as
            a serverless API. The Lambda function accesses the DynamoDB table to gather persisted
            sensor data, and returns it to the browser to be rendered.
        </p>
        <p>
            In contrast with the passive data output subsystem, the active data output subsystem
            does not require user input to trigger the system. This subsystem starts with a
            DynamoDB stream on the table that stores the sensor data. This stream triggers a
            Lambda function which will gather the newly inserted data, check to see if any of
            the values are outside of the expected threshold, and publishes to SNS if a
            user notification is required.
        </p>

        <p class="still-interested">
            <strong>
                Still interested? Go back to the
                {{ macros.link_to("salt_level/index.html", "Salt Level")}}
                page and check out some of the other pages!
            </strong>
        </p>
    </div>
</div>
{% endblock %}
